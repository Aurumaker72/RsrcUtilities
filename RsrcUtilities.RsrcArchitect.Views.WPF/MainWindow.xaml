<ui:FluentWindow x:Class="RsrcUtilities.RsrcArchitect.Views.WPF.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:local="clr-namespace:RsrcUtilities.RsrcArchitect.Views.WPF"
                 xmlns:wpf="clr-namespace:SkiaSharp.Views.WPF;assembly=SkiaSharp.Views.WPF"
                 xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
                 mc:Ignorable="d"
                 x:Name="Window"
                 Title="MainWindow" Height="450" Width="800" d:DataContext="{d:DesignInstance local:MainWindow}"
                 ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
                 ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                 ExtendsContentIntoTitleBar="True"
                 Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                 WindowBackdropType="Mica"
                 WindowCornerPreference="Round"
                 WindowStartupLocation="CenterScreen"
                 KeyDown="MainWindow_OnKeyDown">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <ui:TitleBar
            Title="RsrcArchitect" />
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>


            <Grid Grid.Column="0" Margin="5">
                <ItemsControl>
                    <Button CommandParameter="Button"
                            Command="{Binding MainViewModel.DialogEditorViewModel.CreateControlCommand}"
                            Margin="0 0 0 5" 
                            HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="ControlButton24"/>
                            <TextBlock Text="Button"/>
                        </StackPanel>
                    </Button>
                    <Button CommandParameter="TextBox"
                            Command="{Binding MainViewModel.DialogEditorViewModel.CreateControlCommand}"
                            Margin="0 0 0 5" 
                            HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="Textbox24"/>
                            <TextBlock Text="TextBox"/>
                        </StackPanel>
                    </Button>
                    <Button CommandParameter="CheckBox"
                            Command="{Binding MainViewModel.DialogEditorViewModel.CreateControlCommand}"
                            Margin="0 0 0 5" 
                            HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="CheckboxChecked24"/>
                            <TextBlock Text="CheckBox"/>
                        </StackPanel>
                    </Button>
                    <Button CommandParameter="GroupBox"
                            Command="{Binding MainViewModel.DialogEditorViewModel.CreateControlCommand}"
                            Margin="0 0 0 5" 
                            HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="Group24"/>
                            <TextBlock Text="GroupBox"/>
                        </StackPanel>
                    </Button>
                </ItemsControl>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                    <Button 
                        Command="{Binding MainViewModel.SaveCommand}">
                        <ui:SymbolIcon Symbol="Save24" />
                    </Button>
                    <Button 
                        x:Name="PositioningModeButton"
                        Click="PositioningModeButton_OnClick">
                        <ui:SymbolIcon x:Name="PositioningModeSymbolIcon"/>
                    </Button>
                    
                </StackPanel>
              
            </Grid>


            <wpf:SKElement x:Name="SkElement" Grid.Column="1" SnapsToDevicePixels="True"
                           UseLayoutRounding="True"
                           PaintSurface="SkElement_OnPaintSurface"
                           MouseDown="SkElement_OnMouseDown"
                           MouseUp="SkElement_OnMouseUp"
                           MouseMove="SkElement_OnMouseMove">
                    <wpf:SKElement.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Delete Selected" Command="{Binding MainViewModel.DialogEditorViewModel.DeleteSelectedNodeCommand}">
                                <MenuItem.Icon>
                                    <ui:SymbolIcon Symbol="Delete24"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Bring Selected To Front" Command="{Binding MainViewModel.DialogEditorViewModel.BringSelectedNodeToFrontCommand}">
                                <MenuItem.Icon>
                                    <ui:SymbolIcon Symbol="PositionToFront24"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </wpf:SKElement.ContextMenu>
                </wpf:SKElement>
            <TextBlock Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Opacity="0.5" Foreground="Red" Text="Win32 DPI scaling might cause the generated dialog to appear at a different size" MaxWidth="320" TextWrapping="Wrap"/>

        </Grid>
    </Grid>
</ui:FluentWindow>